@using TrainingDemo.Models

@model UserEditViewModel
@{
    var actionName = ViewContext.RouteData.Values["action"].ToString();
    var isCreate = actionName == "Create";
    ViewBag.Title = "ユーザ情報" + (isCreate ? "登録" : "編集");
}
<h2>@ViewBag.Title.</h2>
@using (Html.BeginForm(actionName, "User", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.UserId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @if (isCreate)
            {
                @Html.TextBoxFor(m => m.UserId, new { @class = "form-control"})
            }
            else
            {
                @Html.TextBoxFor(m => m.UserId, new { @class = "form-control", @readonly = "true" })
            }
            @Html.ValidationMessageFor(m => m.UserId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Sex, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Sex, EnumHelper.GetSelectList(typeof(Sex)), new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Sex, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.MailAddress, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.MailAddress, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.MailAddress, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-default">
                @if (isCreate)
                {
                    <span class="glyphicon glyphicon-save"> 登録</span>
                }
                else
                {
                    <span class="glyphicon glyphicon-upload"> 更新</span>
                }
            </button>
        </div>
    </div>
    <p>@Html.ActionLink("一覧に戻る", "Index")</p>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
